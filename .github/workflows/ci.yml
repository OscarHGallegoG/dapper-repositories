name: 💿 CI

on: [push]

jobs:
  build:
    name: 🏭 Build
    runs-on: ubuntu-20.04
    steps:
      - name: 🚚 Checkout
        uses: actions/checkout@v3
      - name: 🛠 Setup .NET Core
        uses: actions/setup-dotnet@v2
      - name: ⚙ Restore
        run: dotnet restore
      - name: 🏭 Build
        run: dotnet build --no-restore -c Release /p:ContinuousIntegrationBuild=true
      - name: 🐳 Docker Compose
        run: docker-compose up -d
      - name: 🧪 Run tests
        run: dotnet test --no-build -c Release  /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
      - name: ☢ Publish to Codecov
        uses: codecov/codecov-action@v2
      - name: 🗜 Pack Dev artifacts
        if: github.ref == 'refs/heads/master'
        run: dotnet pack --no-build -c Release --version-suffix dev-$(date +%s) -o artifacts/
      - name: 🗜 Pack Nuget artifacts
        if: startsWith(github.ref, 'refs/tags/v')
        run: dotnet pack --no-build -c Release -o artifacts/
      - name: 🗄 Publish artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nupkg
          path: artifacts/*

  deploy-github:
    name: 🏭 Deploy GitHub
    needs: [build]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-20.04
    steps:
      - name: 🚚 Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: nupkg
          path: artifacts/*
      - name: 📦 Publish to GitHub
        run: dotnet nuget push "artifacts/*.nupkg" -s https://nuget.pkg.github.com/phnx47/index.json -k ${{ secrets.GH_PKG_PAT }} --skip-duplicate
  deploy-nuget:
    name: 🏭 Deploy Nuget
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-20.04
    steps:
      - name: 🚚 Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: nupkg
          path: artifacts/*
      - name: 📦 Publish to NuGet
        run: ddotnet nuget push "artifacts/*.nupkg" -k ${{ secrets.NUGET_KEY }} -s https://api.nuget.org/v3/index.json
